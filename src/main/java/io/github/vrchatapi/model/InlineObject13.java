/*
 * VRChat API Documentation
 *
 * The version of the OpenAPI document: 1.4.2
 * Contact: me@ruby.js.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.vrchatapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.vrchatapi.model.PlayerModerationType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineObject13
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InlineObject13 {
  public static final String SERIALIZED_NAME_MODERATED = "moderated";
  @SerializedName(SERIALIZED_NAME_MODERATED)
  private String moderated;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private PlayerModerationType type = PlayerModerationType.SHOWAVATAR;


  public InlineObject13 moderated(String moderated) {
    
    this.moderated = moderated;
    return this;
  }

   /**
   * Get moderated
   * @return moderated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469", value = "")

  public String getModerated() {
    return moderated;
  }


  public void setModerated(String moderated) {
    this.moderated = moderated;
  }


  public InlineObject13 type(PlayerModerationType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public PlayerModerationType getType() {
    return type;
  }


  public void setType(PlayerModerationType type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject13 inlineObject13 = (InlineObject13) o;
    return Objects.equals(this.moderated, inlineObject13.moderated) &&
        Objects.equals(this.type, inlineObject13.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(moderated, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject13 {\n");
    sb.append("    moderated: ").append(toIndentedString(moderated)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

